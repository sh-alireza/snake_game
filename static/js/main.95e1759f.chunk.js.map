{"version":3,"sources":["snake-game/App.js","index.js"],"names":["App","props","handleKeyPress","event","direction","state","forbidden_direction","keyCode","setState","speed","x","y","randomPosition","column","Math","floor","random","row","eat","head","snake","length","food","gameOver","i","update","shift","push","check","setInterval","document","addEventListener","this","segment","items","j","className","onKeyUp","move","draw","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.95e1759f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport items from \"./components/items\";\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            food : this.randomPosition(),\r\n            snake : [this.randomPosition()],\r\n            speed : {\r\n                x : 1,\r\n                y : 0\r\n            },\r\n            direction : \"right\",\r\n            forbidden_direction : \"left\",\r\n        }\r\n        //this.handler = setInterval(this.update,300);\r\n    }\r\n    handleKeyPress = (event) => {\r\n        let direction = this.state.direction;\r\n        let forbidden_direction = this.state.forbidden_direction;\r\n        switch (event.keyCode){\r\n            case 37 :\r\n                direction = \"left\";\r\n                forbidden_direction = \"right\"\r\n                break;\r\n            case 38 :\r\n                direction = \"up\";\r\n                forbidden_direction = \"down\";\r\n                break;\r\n            case 39 :\r\n                direction = \"right\";\r\n                forbidden_direction = \"left\";\r\n                break;\r\n            case 40 :\r\n                direction = \"down\";\r\n                forbidden_direction = \"up\";\r\n                break;\r\n            default:\r\n        }\r\n        if (direction !== this.state.direction && direction !== this.state.forbidden_direction){\r\n            this.setState({\r\n                direction: direction,\r\n                forbidden_direction: forbidden_direction,\r\n                speed : {\r\n                    x : direction === \"right\" ? 1 : direction === \"left\" ? -1 : 0,\r\n                    y : direction === \"up\" ? -1 : direction === \"down\" ? 1 : 0,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {this.update()},100)\r\n        document.addEventListener(\"keydown\",this.handleKeyPress)\r\n    }\r\n\r\n    randomPosition = () => {\r\n        return {\r\n            column: Math.floor(Math.random() * 20),\r\n            row: Math.floor(Math.random() * 20)\r\n        }\r\n    }\r\n\r\n    eat = () => {\r\n        let head = this.state.snake[this.state.snake.length - 1];\r\n        let food = this.state.food;\r\n        return head.column === food.column && head.row === food.row;\r\n    }\r\n\r\n    gameOver = () =>{\r\n        let snake = this.state.snake;\r\n        let head = snake[snake.length - 1];\r\n        for ( let i = 0 ; i < snake.length - 1 ; i++){\r\n            if ( head.column === snake[i].column && head.row === snake[i].row){\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    update = () => {\r\n        let snake = this.state.snake;\r\n        let head = snake[snake.length - 1];\r\n        let food = this.state.food;\r\n        if (this.eat()){\r\n            food = this.randomPosition()\r\n        }else{\r\n            snake.shift();\r\n        }\r\n        snake.push(this.check({\r\n            column : head.column + this.state.speed.x,\r\n            row : head.row + this.state.speed.y\r\n        }))\r\n        if (this.gameOver()){\r\n            snake = [this.randomPosition()];\r\n            food = this.randomPosition();\r\n        }\r\n        this.setState({\r\n            snake : snake,\r\n            food : food,\r\n        })\r\n    }\r\n\r\n    check (segment) {\r\n        if (segment.column > 19){\r\n            segment.column = 0;\r\n        }\r\n        if (segment.column < 0){\r\n            segment.column = 19\r\n        }\r\n        if ( segment.row > 19){\r\n            segment.row = 0;\r\n        }\r\n        if (segment.row < 0){\r\n            segment.row = 19\r\n        }\r\n        return segment;\r\n    }\r\n\r\n    draw(){\r\n        let items = [];\r\n        for ( let i = 0 ; i < 20 ; i++){\r\n            for (let j = 0 ; j < 20 ; j++){\r\n                if ( j === this.state.food.column && i === this.state.food.row){\r\n                    items.push(<items className={\"items food\"}/>)\r\n                }\r\n                else{\r\n                    items.push(<items className={\"items\"}/>)\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0 ; i < this.state.snake.length ; i++){\r\n            let segment = this.state.snake[i];\r\n            items[segment.row * 20 + segment.column] = <items className={\"items snake\"}/>\r\n        }\r\n        return items;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={\"App\"} onKeyUp={this.move}>\r\n                {this.draw()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport App from \"./snake-game/App\";\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}